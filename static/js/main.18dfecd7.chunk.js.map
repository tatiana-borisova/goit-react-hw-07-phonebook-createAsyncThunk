{"version":3,"sources":["components/Contact/Contact.module.css","components/Filter/Filter.module.css","components/Section/Section.module.css","components/ContactList/ContactList.module.css","components/Form/Form.module.css","redux/contacts/contacts-actions.js","redux/contacts/contacts-operations.js","redux/contacts/contacts-reduser.js","redux/store.js","redux/contacts/contacts-selectors.js","components/Section/Section.js","components/Form/Form.js","components/Filter/Filter.js","components/Contact/Contact.js","components/ContactList/ContactList.js","App.js","index.js"],"names":["module","exports","onChangeFilter","createAction","axios","defaults","baseURL","fetchContacts","createAsyncThunk","_","a","rejectWithValue","get","contacts","data","onSubmitHandler","contact","post","deleteContact","id","delete","items","createReducer","fulfilled","action","payload","state","filter","loading","pending","rejected","error","console","log","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","contactsReduser","devTools","process","getLoading","getFilter","getItems","getVisibleContacts","allItems","normalizedFilter","toLowerCase","item","name","includes","number","Section","title","children","className","styles","section","defaultProps","Form","useState","setName","setNumber","useSelector","dispatch","useDispatch","handleChange","e","currentTarget","value","s","form","onSubmit","preventDefault","isNameHere","find","isNumberHere","alert","shortid","generate","toast","success","label","input","type","pattern","required","placeholder","onChange","button","Filter","Contact","href","onClick","warning","forDeleteContact","ContactList","map","App","isLoadingContacts","useEffect","style","display","justifyContent","color","position","autoClose","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.18dfecd7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact\":\"Contact_contact__1m2re\",\"name\":\"Contact_name__2ZcKm\",\"number\":\"Contact_number__2MvnN\",\"button\":\"Contact_button__1wUL0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__1E5tH\",\"label\":\"Filter_label__3DcZT\",\"input\":\"Filter_input__2DoVp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__2S6oE\",\"section\":\"Section_section__Ap5Zy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts\":\"ContactList_contacts__1Ny0J\",\"contact\":\"ContactList_contact__3ZIyH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__2TM1N\",\"label\":\"Form_label__15SAE\",\"input\":\"Form_input__2ESfd\",\"button\":\"Form_button__243jh\"};","import { createAction } from '@reduxjs/toolkit';\n\nexport const onChangeFilter = createAction('contacts/changeFilter');\n","import axios from 'axios';\nimport { createAsyncThunk } from '@reduxjs/toolkit';\n\naxios.defaults.baseURL = 'https://61ba064d48df2f0017e5a8a4.mockapi.io/';\n\nexport const fetchContacts = createAsyncThunk(\n  'contacts/fetchContacts',\n  async (_, { rejectWithValue }) => {\n    try {\n      const contacts = await axios.get('/contacts');\n      return contacts.data;\n    } catch (error) {\n      return rejectWithValue(error);\n    }\n  },\n);\n\nexport const onSubmitHandler = createAsyncThunk(\n  'contacts/onSubmitHandler',\n  async (contact, { rejectWithValue }) => {\n    try {\n      const { data } = await axios.post('/contacts', contact);\n      return data;\n    } catch (error) {\n      return rejectWithValue(error);\n    }\n  },\n);\n\nexport const deleteContact = createAsyncThunk(\n  'contacts/deleteContact',\n  async (id, { rejectWithValue }) => {\n    try {\n      await axios.delete(`/contacts/${id}`);\n      return id;\n    } catch (error) {\n      return rejectWithValue(error);\n    }\n  },\n);\n","import { createReducer, combineReducers } from '@reduxjs/toolkit';\nimport { onChangeFilter } from 'redux/contacts/contacts-actions';\nimport {\n  fetchContacts,\n  onSubmitHandler,\n  deleteContact,\n} from 'redux/contacts/contacts-operations';\n\nconst items = createReducer([], {\n  [fetchContacts.fulfilled]: (_, action) => action.payload,\n  [onSubmitHandler.fulfilled]: (state, action) => [...state, action.payload],\n  [deleteContact.fulfilled]: (state, action) =>\n    state.filter(({ id }) => id !== action.payload),\n});\n\nconst filter = createReducer('', {\n  [onChangeFilter]: (_, action) => action.payload,\n});\n\nconst loading = createReducer(false, {\n  [fetchContacts.pending]: () => true,\n  [fetchContacts.fulfilled]: () => false,\n  [fetchContacts.rejected]: () => false,\n\n  [onSubmitHandler.pending]: () => true,\n  [onSubmitHandler.fulfilled]: () => false,\n  [onSubmitHandler.rejected]: () => false,\n\n  [deleteContact.pending]: () => true,\n  [deleteContact.fulfilled]: () => false,\n  [deleteContact.rejected]: () => false,\n});\n\nconst error = createReducer(null, {\n  [fetchContacts.rejected]: error => console.log(error),\n  [fetchContacts.pending]: () => null,\n  [onSubmitHandler.rejected]: error => console.log(error),\n  [onSubmitHandler.pending]: () => null,\n  [deleteContact.rejected]: error => console.log(error),\n  [deleteContact.pending]: () => null,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n  loading,\n  error,\n});\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport {\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport contactsReduser from 'redux/contacts/contacts-reduser';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst store = configureStore({\n  reducer: {\n    contacts: contactsReduser,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\n// const persistor = persistStore(store);\n// const allStore = { store, persistor };\n\nexport default store;\n","export const getLoading = state => state.contacts.loading;\nexport const getFilter = state => state.contacts.filter;\nexport const getItems = state => state.contacts.items;\n\nexport const getVisibleContacts = state => {\n  const allItems = getItems(state);\n  const filter = getFilter(state);\n  const normalizedFilter = filter.toLowerCase();\n  return allItems.filter(\n    item =>\n      item.name.toLowerCase().includes(normalizedFilter) ||\n      item.number.includes(normalizedFilter),\n  );\n};\n","import PropTypes from 'prop-types';\nimport styles from './Section.module.css';\n\nexport default function Section({ title, children }) {\n  return (\n    <section className={styles.section}>\n      {title && <h2 className={styles.title}>{title}</h2>}\n      {children}\n    </section>\n  );\n}\n\nSection.defaultProps = {\n  title: '',\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n","import { useState } from 'react';\nimport shortid from 'shortid';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { getItems } from 'redux/contacts/contacts-selectors';\nimport { onSubmitHandler } from 'redux/contacts/contacts-operations';\nimport s from './Form.module.css';\n\nconst Form = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector(getItems);\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n    name === 'name' && setName(value);\n    name === 'number' && setNumber(value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const isNameHere = contacts.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase(),\n    );\n\n    const isNumberHere = contacts.find(\n      contact => contact.number.toLowerCase() === number.toLowerCase(),\n    );\n\n    if (isNameHere || isNumberHere) {\n      alert(\n        `${isNameHere ? name : ''} ${\n          isNumberHere ? number : ''\n        } is already in contacts`,\n      );\n    } else {\n      dispatch(onSubmitHandler({ id: shortid.generate(), name, number }));\n      toast.success('Contact was added!');\n    }\n\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <label className={s.label}>\n        Name\n        <input\n          className={s.input}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"The name can only consist of letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan, etc.\"\n          required\n          placeholder=\"Enter name\"\n          value={name}\n          onChange={handleChange}\n        />\n      </label>\n      <label className={s.label}>\n        Number\n        <input\n          className={s.input}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          placeholder=\"Enter number\"\n          value={number}\n          onChange={handleChange}\n        />\n      </label>\n      <button type=\"submit\" className={s.button}>\n        Add contact\n      </button>\n    </form>\n  );\n};\n\nexport default Form;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { onChangeFilter } from 'redux/contacts/contacts-actions';\nimport { getFilter } from 'redux/contacts/contacts-selectors';\nimport s from './Filter.module.css';\n\nconst Filter = () => {\n  const value = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  return (\n    <p className={s.filter}>\n      <label className={s.label}>\n        Find contacts\n        <input\n          className={s.input}\n          type=\"text\"\n          placeholder=\"Enter name or number\"\n          value={value}\n          onChange={e => dispatch(onChangeFilter(e.currentTarget.value))}\n        ></input>\n      </label>\n    </p>\n  );\n};\n\nexport default Filter;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { toast } from 'react-toastify';\nimport { deleteContact } from 'redux/contacts/contacts-operations';\nimport s from './Contact.module.css';\n\nconst Contact = ({ data }) => {\n  const { name, number, id } = data;\n  const dispatch = useDispatch();\n  const forDeleteContact = id => {\n    dispatch(deleteContact(id)) && toast.warning('Contact was deleted!');\n  };\n\n  return (\n    <div className={s.contact}>\n      <span className={s.name}>{name}:</span>\n      <a className={s.number} href={`tel:${number}`}>\n        {number}\n      </a>\n      <button\n        className={s.button}\n        type=\"button\"\n        onClick={() => forDeleteContact(id)}\n      >\n        Delete\n      </button>\n    </div>\n  );\n};\n\nContact.propTypes = {\n  data: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }),\n};\n\nexport default Contact;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport Contact from 'components/Contact';\nimport { getVisibleContacts } from 'redux/contacts/contacts-selectors';\nimport s from './ContactList.module.css';\n\nconst ContactList = () => {\n  const contacts = useSelector(getVisibleContacts);\n  return (\n    <div className={s.contacts}>\n      <ul>\n        {contacts.map(contact => (\n          <li key={contact.id} className={s.contact}>\n            <Contact data={contact} />\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default ContactList;\n","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { Puff } from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport { getLoading } from 'redux/contacts/contacts-selectors';\nimport { fetchContacts } from 'redux/contacts/contacts-operations';\nimport Section from 'components/Section';\nimport Form from 'components/Form';\nimport Filter from 'components/Filter';\nimport ContactList from 'components/ContactList';\n\nconst App = () => {\n  const dispatch = useDispatch();\n  const isLoadingContacts = useSelector(getLoading);\n\n  useEffect(() => dispatch(fetchContacts()), [dispatch]);\n\n  return (\n    <>\n      <Section title=\"Phonebook\">\n        <Form />\n      </Section>\n\n      <Section title=\"Contacts\">\n        <Filter />\n        <ContactList />\n        {isLoadingContacts && (\n          <div style={{ display: 'flex', justifyContent: 'center' }}>\n            <Puff color=\"#7dcdff\" />\n          </div>\n        )}\n      </Section>\n      <ToastContainer position=\"top-right\" autoClose={3000} />\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n// import { PersistGate } from 'redux-persist/integration/react';\nimport store from 'redux/store';\nimport 'modern-normalize/modern-normalize.css';\nimport 'index.css';\nimport App from 'App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      {/* <PersistGate loading={null} persistor={allStore.persistor}> */}\n      <App />\n      {/* </PersistGate> */}\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}