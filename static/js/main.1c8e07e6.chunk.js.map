{"version":3,"sources":["components/Contact/Contact.module.css","components/Filter/Filter.module.css","components/Section/Section.module.css","components/ContactList/ContactList.module.css","components/Form/Form.module.css","redux/contacts/contacts-actions.js","redux/contacts/contacts-reduser.js","redux/store.js","redux/contacts/contacts-selectors.js","redux/contacts/contacts-operations.js","components/Section/Section.js","components/Form/Form.js","components/Filter/Filter.js","components/Contact/Contact.js","components/ContactList/ContactList.js","App.js","index.js"],"names":["module","exports","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","onSubmitHandlerRequest","onSubmitHandlerSuccess","onSubmitHandlerError","deleteContactRequest","deleteContactSuccess","deleteContactError","onChangeFilter","items","createReducer","_","payload","state","filter","id","loading","error","console","log","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","contacts","contactsReduser","devTools","process","getLoading","getFilter","getItems","getVisibleContacts","allItems","normalizedFilter","toLowerCase","item","name","includes","number","axios","defaults","baseURL","Section","title","children","className","styles","section","defaultProps","Form","useState","setName","setNumber","useSelector","dispatch","useDispatch","handleChange","e","currentTarget","value","s","form","onSubmit","preventDefault","contact","isNameHere","find","isNumberHere","alert","shortid","generate","post","then","data","catch","label","input","type","pattern","required","placeholder","onChange","button","Filter","Contact","forDeleteContact","delete","deleteContact","href","onClick","ContactList","map","App","isLoadingContacts","useEffect","get","style","display","justifyContent","color","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wKACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,KAAO,sBAAsB,OAAS,wBAAwB,OAAS,0B,mBCA5HD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,MAAQ,sBAAsB,MAAQ,wB,mBCAxFD,EAAOC,QAAU,CAAC,MAAQ,uBAAuB,QAAU,2B,mBCA3DD,EAAOC,QAAU,CAAC,SAAW,8BAA8B,QAAU,+B,uCCArED,EAAOC,QAAU,CAAC,KAAO,mBAAmB,MAAQ,oBAAoB,MAAQ,oBAAoB,OAAS,uB,8ICChGC,EAAuBC,YAClC,iCAEWC,EAAuBD,YAClC,iCAEWE,EAAqBF,YAAa,+BAElCG,EAAyBH,YACpC,mCAEWI,EAAyBJ,YACpC,mCAEWK,EAAuBL,YAClC,iCAGWM,EAAuBN,YAClC,iCAEWO,EAAuBP,YAClC,iCAEWQ,EAAqBR,YAAa,+BAElCS,EAAiBT,YAAa,yBCbrCU,EAAQC,YAAc,IAAD,mBACxBV,GAAuB,SAACW,EAAD,YAAMC,WADL,cAExBT,GAAyB,SAACU,EAAD,OAAUD,EAAV,EAAUA,QAAV,4BAA4BC,GAA5B,CAAmCD,OAFpC,cAGxBN,GAAuB,SAACO,EAAD,OAAUD,EAAV,EAAUA,QAAV,OACtBC,EAAMC,QAAO,qBAAGC,KAAgBH,QAJT,IAOrBE,EAASJ,YAAc,GAAD,eACzBF,GAAiB,SAACG,EAAD,YAAMC,YAGpBI,EAAUN,aAAc,GAAD,mBAC1BZ,GAAuB,kBAAM,KADH,cAE1BE,GAAuB,kBAAM,KAFH,cAG1BC,GAAqB,kBAAM,KAHD,cAK1BC,GAAyB,kBAAM,KALL,cAM1BC,GAAyB,kBAAM,KANL,cAO1BC,GAAuB,kBAAM,KAPH,cAS1BC,GAAuB,kBAAM,KATH,cAU1BC,GAAuB,kBAAM,KAVH,cAW1BC,GAAqB,kBAAM,KAXD,IAcvBU,EAAQP,YAAc,MAAD,mBACxBT,GAAqB,SAAAgB,GAAK,OAAIC,QAAQC,IAAIF,MADlB,cAExBb,GAAuB,SAAAa,GAAK,OAAIC,QAAQC,IAAIF,MAFpB,cAGxBV,GAAqB,SAAAU,GAAK,OAAIC,QAAQC,IAAIF,MAHlB,IAMZG,cAAgB,CAC7BX,QACAK,SACAE,UACAC,UCtCII,EAAU,sBACXC,YAAqB,CACtBC,kBAAmB,CACjBC,eAAgB,CAACC,IAAOC,IAAWC,IAAOC,IAASC,IAAOC,SAHhD,CAMdC,MAcaC,EAXDC,YAAe,CAC3BC,QAAS,CACPC,SAAUC,GAEZf,aACAgB,UAAUC,I,sBC1BCC,G,MAAa,SAAA1B,GAAK,OAAIA,EAAMsB,SAASnB,UACrCwB,EAAY,SAAA3B,GAAK,OAAIA,EAAMsB,SAASrB,QACpC2B,EAAW,SAAA5B,GAAK,OAAIA,EAAMsB,SAAS1B,OAEnCiC,EAAqB,SAAA7B,GAChC,IAAM8B,EAAWF,EAAS5B,GAEpB+B,EADSJ,EAAU3B,GACOgC,cAChC,OAAOF,EAAS7B,QACd,SAAAgC,GAAI,OACFA,EAAKC,KAAKF,cAAcG,SAASJ,IACjCE,EAAKG,OAAOD,SAASJ,O,iBCE3BM,IAAMC,SAASC,QAAU,+CAclB,I,wBCxBQ,SAASC,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACvC,OACE,0BAASC,UAAWC,IAAOC,QAA3B,UACGJ,GAAS,oBAAIE,UAAWC,IAAOH,MAAtB,SAA8BA,IACvCC,KAKPF,EAAQM,aAAe,CACrBL,MAAO,I,6CCkEMM,EAxEF,WACX,MAAwBC,mBAAS,IAAjC,mBAAOd,EAAP,KAAae,EAAb,KACA,EAA4BD,mBAAS,IAArC,mBAAOZ,EAAP,KAAec,EAAf,KACM5B,EAAW6B,YAAYvB,GACvBwB,EAAWC,cAEXC,EAAe,SAAAC,GACnB,MAAwBA,EAAEC,cAAlBtB,EAAR,EAAQA,KAAMuB,EAAd,EAAcA,MACL,SAATvB,GAAmBe,EAAQQ,GAClB,WAATvB,GAAqBgB,EAAUO,IA0BjC,OACE,uBAAMd,UAAWe,IAAEC,KAAMC,SAxBN,SAAAL,GACnBA,EAAEM,iBAEF,IFa2BC,EEbrBC,EAAazC,EAAS0C,MAC1B,SAAAF,GAAO,OAAIA,EAAQ5B,KAAKF,gBAAkBE,EAAKF,iBAG3CiC,EAAe3C,EAAS0C,MAC5B,SAAAF,GAAO,OAAIA,EAAQ1B,OAAOJ,gBAAkBI,EAAOJ,iBAGrD+B,GAAcE,EACVC,MAAM,GAAD,OACAH,EAAa7B,EAAO,GADpB,YAED+B,EAAe7B,EAAS,GAFvB,4BAKLgB,GFDuBU,EECE,CAAE5D,GAAIiE,IAAQC,WAAYlC,OAAME,UFDvB,SAAAgB,GACxCA,EAAS/D,KACTgD,IACGgC,KAAK,YAAaP,GAClBQ,MAAK,gBAAGC,EAAH,EAAGA,KAAH,OAAcnB,EAAS9D,EAAuBiF,OACnDC,OAAM,SAAApE,GAAK,OAAIgD,EAAS7D,EAAqBa,UEF9C6C,EAAQ,IACRC,EAAU,KAIV,UACE,wBAAOP,UAAWe,IAAEe,MAApB,iBAEE,uBACE9B,UAAWe,IAAEgB,MACbC,KAAK,OACLzC,KAAK,OACL0C,QAAQ,yHACRnC,MAAM,sJACNoC,UAAQ,EACRC,YAAY,aACZrB,MAAOvB,EACP6C,SAAUzB,OAGd,wBAAOX,UAAWe,IAAEe,MAApB,mBAEE,uBACE9B,UAAWe,IAAEgB,MACbC,KAAK,MACLzC,KAAK,SACL0C,QAAQ,yFACRnC,MAAM,+FACNoC,UAAQ,EACRC,YAAY,eACZrB,MAAOrB,EACP2C,SAAUzB,OAGd,wBAAQqB,KAAK,SAAShC,UAAWe,IAAEsB,OAAnC,6B,iBC9CSC,GApBA,WACb,IAAMxB,EAAQN,YAAYxB,GACpByB,EAAWC,cAEjB,OACE,mBAAGV,UAAWe,IAAEzD,OAAhB,SACE,wBAAO0C,UAAWe,IAAEe,MAApB,0BAEE,uBACE9B,UAAWe,IAAEgB,MACbC,KAAK,OACLG,YAAY,uBACZrB,MAAOA,EACPsB,SAAU,SAAAxB,GAAC,OAAIH,EAASzD,EAAe4D,EAAEC,cAAcC,iB,oBCiBlDyB,GA9BC,SAAC,GAAc,IAAZX,EAAW,EAAXA,KACTrC,EAAqBqC,EAArBrC,KAAME,EAAemC,EAAfnC,OAAQlC,EAAOqE,EAAPrE,GAChBkD,EAAWC,cACX8B,EAAmB,SAAAjF,GAAE,OAAIkD,EJkCJ,SAAAlD,GAAE,OAAI,SAAAkD,GACjCA,EAAS5D,KACT6C,IACG+C,OADH,oBACuBlF,IACpBoE,MAAK,kBAAMlB,EAAS3D,EAAqBS,OACzCsE,OAAM,SAAApE,GAAK,OAAIgD,EAAS1D,EAAmBU,QIvCNiF,CAAcnF,KAEtD,OACE,sBAAKyC,UAAWe,KAAEI,QAAlB,UACE,uBAAMnB,UAAWe,KAAExB,KAAnB,UAA0BA,EAA1B,OACA,mBAAGS,UAAWe,KAAEtB,OAAQkD,KAAI,cAASlD,GAArC,SACGA,IAEH,wBACEO,UAAWe,KAAEsB,OACbL,KAAK,SACLY,QAAS,kBAAMJ,EAAiBjF,IAHlC,wB,oBCISsF,GAfK,WAClB,IAAMlE,EAAW6B,YAAYtB,GAC7B,OACE,qBAAKc,UAAWe,KAAEpC,SAAlB,SACE,6BACGA,EAASmE,KAAI,SAAA3B,GAAO,OACnB,oBAAqBnB,UAAWe,KAAEI,QAAlC,SACE,cAAC,GAAD,CAASS,KAAMT,KADRA,EAAQ5D,YC0BZwF,GA3BH,WACV,IAAMtC,EAAWC,cACXsC,EAAoBxC,YAAYzB,GAMtC,OAJAkE,qBAAU,WACRxC,GNW+B,SAAAA,GACjCA,EAASnE,KACToD,IACGwD,IAAI,aACJvB,MAAK,gBAAGC,EAAH,EAAGA,KAAH,OAAcnB,EAASjE,EAAqBoF,OACjDC,OAAM,SAAApE,GAAK,OAAIgD,EAAShE,EAAmBgB,YMf3C,CAACgD,IAGF,gCACE,cAACZ,EAAD,CAASC,MAAM,YAAf,SACE,cAAC,EAAD,MAGF,eAACD,EAAD,CAASC,MAAM,WAAf,UACE,cAAC,GAAD,IACA,cAAC,GAAD,IACCkD,GACC,qBAAKG,MAAO,CAAEC,QAAS,OAAQC,eAAgB,UAA/C,SACE,cAAC,IAAD,CAAMC,MAAM,qBCrBxBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUjF,MAAOA,EAAjB,SAEE,cAAC,GAAD,QAIJkF,SAASC,eAAe,W","file":"static/js/main.1c8e07e6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact\":\"Contact_contact__1m2re\",\"name\":\"Contact_name__2ZcKm\",\"number\":\"Contact_number__2MvnN\",\"button\":\"Contact_button__1wUL0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__1E5tH\",\"label\":\"Filter_label__3DcZT\",\"input\":\"Filter_input__2DoVp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__2S6oE\",\"section\":\"Section_section__Ap5Zy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts\":\"ContactList_contacts__1Ny0J\",\"contact\":\"ContactList_contact__3ZIyH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__2TM1N\",\"label\":\"Form_label__15SAE\",\"input\":\"Form_input__2ESfd\",\"button\":\"Form_button__243jh\"};","import { createAction } from '@reduxjs/toolkit';\n\nexport const fetchContactsRequest = createAction(\n  'contacts/fetchContactsRequest',\n);\nexport const fetchContactsSuccess = createAction(\n  'contacts/fetchContactsSuccess',\n);\nexport const fetchContactsError = createAction('contacts/fetchContactsError');\n\nexport const onSubmitHandlerRequest = createAction(\n  'contacts/onSubmitHandlerRequest',\n);\nexport const onSubmitHandlerSuccess = createAction(\n  'contacts/onSubmitHandlerSuccess',\n);\nexport const onSubmitHandlerError = createAction(\n  'contacts/onSubmitHandlerError',\n);\n\nexport const deleteContactRequest = createAction(\n  'contacts/deleteContactRequest',\n);\nexport const deleteContactSuccess = createAction(\n  'contacts/deleteContactSuccess',\n);\nexport const deleteContactError = createAction('contacts/deleteContactError');\n\nexport const onChangeFilter = createAction('contacts/changeFilter');\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport {\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  onSubmitHandlerRequest,\n  onSubmitHandlerSuccess,\n  onSubmitHandlerError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  onChangeFilter,\n} from './contacts-actions';\n\nconst items = createReducer([], {\n  [fetchContactsSuccess]: (_, { payload }) => payload,\n  [onSubmitHandlerSuccess]: (state, { payload }) => [...state, payload],\n  [deleteContactSuccess]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer('', {\n  [onChangeFilter]: (_, { payload }) => payload,\n});\n\nconst loading = createReducer(false, {\n  [fetchContactsRequest]: () => true,\n  [fetchContactsSuccess]: () => false,\n  [fetchContactsError]: () => false,\n\n  [onSubmitHandlerRequest]: () => true,\n  [onSubmitHandlerSuccess]: () => false,\n  [onSubmitHandlerError]: () => false,\n\n  [deleteContactRequest]: () => true,\n  [deleteContactSuccess]: () => false,\n  [deleteContactError]: () => false,\n});\n\nconst error = createReducer(null, {\n  [fetchContactsError]: error => console.log(error),\n  [onSubmitHandlerError]: error => console.log(error),\n  [deleteContactError]: error => console.log(error),\n});\n\nexport default combineReducers({\n  items,\n  filter,\n  loading,\n  error,\n});\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport {\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport contactsReduser from './contacts/contacts-reduser';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst store = configureStore({\n  reducer: {\n    contacts: contactsReduser,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\n// const persistor = persistStore(store);\n// const allStore = { store, persistor };\n\nexport default store;\n","export const getLoading = state => state.contacts.loading;\nexport const getFilter = state => state.contacts.filter;\nexport const getItems = state => state.contacts.items;\n\nexport const getVisibleContacts = state => {\n  const allItems = getItems(state);\n  const filter = getFilter(state);\n  const normalizedFilter = filter.toLowerCase();\n  return allItems.filter(\n    item =>\n      item.name.toLowerCase().includes(normalizedFilter) ||\n      item.number.includes(normalizedFilter),\n  );\n};\n","import axios from 'axios';\nimport {\n  onSubmitHandlerRequest,\n  onSubmitHandlerSuccess,\n  onSubmitHandlerError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n} from './contacts-actions';\n\naxios.defaults.baseURL = 'https://61ba064d48df2f0017e5a8a4.mockapi.io/';\n\n// Asynchronous option:\n// export const fetchContacts = () => async dispatch => {\n//   dispatch(fetchContactsRequest());\n\n//   try {\n//     const { data } = await axios.get('/contacts');\n//     dispatch(fetchContactsSuccess(data));\n//   } catch (error) {\n//     dispatch(fetchContactsError(error));\n//   }\n// };\n\nexport const fetchContacts = () => dispatch => {\n  dispatch(fetchContactsRequest());\n  axios\n    .get('/contacts')\n    .then(({ data }) => dispatch(fetchContactsSuccess(data)))\n    .catch(error => dispatch(fetchContactsError(error)));\n};\n\nexport const onSubmitHandler = contact => dispatch => {\n  dispatch(onSubmitHandlerRequest());\n  axios\n    .post('/contacts', contact)\n    .then(({ data }) => dispatch(onSubmitHandlerSuccess(data)))\n    .catch(error => dispatch(onSubmitHandlerError(error)));\n};\n\nexport const deleteContact = id => dispatch => {\n  dispatch(deleteContactRequest());\n  axios\n    .delete(`/contacts/${id}`)\n    .then(() => dispatch(deleteContactSuccess(id)))\n    .catch(error => dispatch(deleteContactError(error)));\n};\n","import PropTypes from 'prop-types';\nimport styles from './Section.module.css';\n\nexport default function Section({ title, children }) {\n  return (\n    <section className={styles.section}>\n      {title && <h2 className={styles.title}>{title}</h2>}\n      {children}\n    </section>\n  );\n}\n\nSection.defaultProps = {\n  title: '',\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n","import { useState } from 'react';\nimport shortid from 'shortid';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getItems } from '../../redux/contacts/contacts-selectors';\nimport { onSubmitHandler } from '../../redux/contacts/contacts-operations';\nimport s from './Form.module.css';\n\nconst Form = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector(getItems);\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n    name === 'name' && setName(value);\n    name === 'number' && setNumber(value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const isNameHere = contacts.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase(),\n    );\n\n    const isNumberHere = contacts.find(\n      contact => contact.number.toLowerCase() === number.toLowerCase(),\n    );\n\n    isNameHere || isNumberHere\n      ? alert(\n          `${isNameHere ? name : ''} ${\n            isNumberHere ? number : ''\n          } is already in contacts`,\n        )\n      : dispatch(onSubmitHandler({ id: shortid.generate(), name, number }));\n\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <label className={s.label}>\n        Name\n        <input\n          className={s.input}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"The name can only consist of letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan, etc.\"\n          required\n          placeholder=\"Enter name\"\n          value={name}\n          onChange={handleChange}\n        />\n      </label>\n      <label className={s.label}>\n        Number\n        <input\n          className={s.input}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          placeholder=\"Enter number\"\n          value={number}\n          onChange={handleChange}\n        />\n      </label>\n      <button type=\"submit\" className={s.button}>\n        Add contact\n      </button>\n    </form>\n  );\n};\n\nexport default Form;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { onChangeFilter } from '../../redux/contacts/contacts-actions';\nimport { getFilter } from '../../redux/contacts/contacts-selectors';\nimport s from './Filter.module.css';\n\nconst Filter = () => {\n  const value = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  return (\n    <p className={s.filter}>\n      <label className={s.label}>\n        Find contacts\n        <input\n          className={s.input}\n          type=\"text\"\n          placeholder=\"Enter name or number\"\n          value={value}\n          onChange={e => dispatch(onChangeFilter(e.currentTarget.value))}\n        ></input>\n      </label>\n    </p>\n  );\n};\n\nexport default Filter;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { deleteContact } from '../../redux/contacts/contacts-operations';\nimport s from './Contact.module.css';\n\nconst Contact = ({ data }) => {\n  const { name, number, id } = data;\n  const dispatch = useDispatch();\n  const forDeleteContact = id => dispatch(deleteContact(id));\n\n  return (\n    <div className={s.contact}>\n      <span className={s.name}>{name}:</span>\n      <a className={s.number} href={`tel:${number}`}>\n        {number}\n      </a>\n      <button\n        className={s.button}\n        type=\"button\"\n        onClick={() => forDeleteContact(id)}\n      >\n        Delete\n      </button>\n    </div>\n  );\n};\n\nContact.propTypes = {\n  data: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }),\n};\n\nexport default Contact;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport Contact from '../Contact';\nimport { getVisibleContacts } from '../../redux/contacts/contacts-selectors';\nimport s from './ContactList.module.css';\n\nconst ContactList = () => {\n  const contacts = useSelector(getVisibleContacts);\n  return (\n    <div className={s.contacts}>\n      <ul>\n        {contacts.map(contact => (\n          <li key={contact.id} className={s.contact}>\n            <Contact data={contact} />\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default ContactList;\n","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Puff } from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport { getLoading } from './redux/contacts/contacts-selectors';\nimport { fetchContacts } from './redux/contacts/contacts-operations';\nimport Section from './components/Section';\nimport Form from './components/Form';\nimport Filter from './components/Filter';\nimport ContactList from './components/ContactList';\n\nconst App = () => {\n  const dispatch = useDispatch();\n  const isLoadingContacts = useSelector(getLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div>\n      <Section title=\"Phonebook\">\n        <Form />\n      </Section>\n\n      <Section title=\"Contacts\">\n        <Filter />\n        <ContactList />\n        {isLoadingContacts && (\n          <div style={{ display: 'flex', justifyContent: 'center' }}>\n            <Puff color=\"#7dcdff\" />\n          </div>\n        )}\n      </Section>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n// import { PersistGate } from 'redux-persist/integration/react';\nimport store from './redux/store';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      {/* <PersistGate loading={null} persistor={allStore.persistor}> */}\n      <App />\n      {/* </PersistGate> */}\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}